[{"D:\\INCUBATOR\\ToDo\\src\\index.tsx":"1","D:\\INCUBATOR\\ToDo\\src\\AddItemForm.tsx":"2","D:\\INCUBATOR\\ToDo\\src\\Todolist.tsx":"3","D:\\INCUBATOR\\ToDo\\src\\EditableSpan.tsx":"4","D:\\INCUBATOR\\ToDo\\src\\App.tsx":"5","D:\\INCUBATOR\\ToDo\\src\\state\\tasks-reducer.ts":"6","D:\\INCUBATOR\\ToDo\\src\\Task.tsx":"7"},{"size":641,"mtime":1625140943815,"results":"8","hashOfConfig":"9"},{"size":1456,"mtime":1624550446324,"results":"10","hashOfConfig":"9"},{"size":3513,"mtime":1625140944133,"results":"11","hashOfConfig":"9"},{"size":952,"mtime":1624547384402,"results":"12","hashOfConfig":"9"},{"size":4732,"mtime":1624550154768,"results":"13","hashOfConfig":"9"},{"size":5106,"mtime":1625140944250,"results":"14","hashOfConfig":"9"},{"size":1603,"mtime":1624547381985,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ulsrpz",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"D:\\INCUBATOR\\ToDo\\src\\index.tsx",[],"D:\\INCUBATOR\\ToDo\\src\\AddItemForm.tsx",[],"D:\\INCUBATOR\\ToDo\\src\\Todolist.tsx",["31","32","33","34","35"],"D:\\INCUBATOR\\ToDo\\src\\EditableSpan.tsx",[],"D:\\INCUBATOR\\ToDo\\src\\App.tsx",["36","37","38","39","40","41","42","43","44","45"],"D:\\INCUBATOR\\ToDo\\src\\state\\tasks-reducer.ts",[],"D:\\INCUBATOR\\ToDo\\src\\Task.tsx",["46","47","48"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskType} from './Todolist'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.isDone}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n",{"ruleId":"49","severity":1,"message":"50","line":30,"column":8,"nodeType":"51","endLine":30,"endColumn":33,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"50","line":37,"column":8,"nodeType":"51","endLine":37,"endColumn":45,"suggestions":"53"},{"ruleId":"49","severity":1,"message":"50","line":39,"column":86,"nodeType":"51","endLine":39,"endColumn":116,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"50","line":40,"column":92,"nodeType":"51","endLine":40,"endColumn":122,"suggestions":"55"},{"ruleId":"49","severity":1,"message":"50","line":41,"column":98,"nodeType":"51","endLine":41,"endColumn":128,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":14,"column":73,"nodeType":"59","messageId":"60","endLine":14,"endColumn":85},{"ruleId":"57","severity":1,"message":"61","line":31,"column":9,"nodeType":"59","messageId":"60","endLine":31,"endColumn":20},{"ruleId":"57","severity":1,"message":"62","line":32,"column":9,"nodeType":"59","messageId":"60","endLine":32,"endColumn":20},{"ruleId":"49","severity":1,"message":"63","line":41,"column":8,"nodeType":"51","endLine":41,"endColumn":10,"suggestions":"64"},{"ruleId":"49","severity":1,"message":"63","line":46,"column":8,"nodeType":"51","endLine":46,"endColumn":10,"suggestions":"65"},{"ruleId":"49","severity":1,"message":"63","line":51,"column":8,"nodeType":"51","endLine":51,"endColumn":10,"suggestions":"66"},{"ruleId":"49","severity":1,"message":"63","line":56,"column":8,"nodeType":"51","endLine":56,"endColumn":10,"suggestions":"67"},{"ruleId":"49","severity":1,"message":"63","line":61,"column":8,"nodeType":"51","endLine":61,"endColumn":10,"suggestions":"68"},{"ruleId":"49","severity":1,"message":"63","line":66,"column":8,"nodeType":"51","endLine":66,"endColumn":10,"suggestions":"69"},{"ruleId":"49","severity":1,"message":"63","line":71,"column":8,"nodeType":"51","endLine":71,"endColumn":10,"suggestions":"70"},{"ruleId":"49","severity":1,"message":"50","line":15,"column":97,"nodeType":"51","endLine":15,"endColumn":130,"suggestions":"71"},{"ruleId":"49","severity":1,"message":"50","line":20,"column":8,"nodeType":"51","endLine":20,"endColumn":41,"suggestions":"72"},{"ruleId":"49","severity":1,"message":"50","line":24,"column":8,"nodeType":"51","endLine":24,"endColumn":41,"suggestions":"73"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["74"],["75"],["76"],["77"],["78"],"@typescript-eslint/no-unused-vars","'tasksReducer' is defined but never used.","Identifier","unusedVar","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["79"],["80"],["81"],["82"],["83"],["84"],["85"],["86"],["87"],["88"],{"desc":"89","fix":"90"},{"desc":"89","fix":"91"},{"desc":"89","fix":"92"},{"desc":"89","fix":"93"},{"desc":"89","fix":"94"},{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},{"desc":"95","fix":"98"},{"desc":"95","fix":"99"},{"desc":"95","fix":"100"},{"desc":"95","fix":"101"},{"desc":"95","fix":"102"},{"desc":"89","fix":"103"},{"desc":"89","fix":"104"},{"desc":"89","fix":"105"},"Update the dependencies array to be: [props]",{"range":"106","text":"107"},{"range":"108","text":"107"},{"range":"109","text":"107"},{"range":"110","text":"107"},{"range":"111","text":"107"},"Update the dependencies array to be: [dispatch]",{"range":"112","text":"113"},{"range":"114","text":"113"},{"range":"115","text":"113"},{"range":"116","text":"113"},{"range":"117","text":"113"},{"range":"118","text":"113"},{"range":"119","text":"113"},{"range":"120","text":"107"},{"range":"121","text":"107"},{"range":"122","text":"107"},[1174,1199],"[props]",[1412,1449],[1539,1569],[1663,1693],[1793,1823],[1411,1413],"[dispatch]",[1587,1589],[1796,1798],[2010,2012],[2214,2216],[2366,2368],[2550,2552],[693,726],[955,988],[1145,1178]]