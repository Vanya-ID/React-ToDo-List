[{"D:\\INCUBATOR\\ToDo\\src\\index.tsx":"1","D:\\INCUBATOR\\ToDo\\src\\app\\App.tsx":"2","D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"3","D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\tasks-reducer.ts":"4","D:\\INCUBATOR\\ToDo\\src\\reportWebVitals.ts":"5","D:\\INCUBATOR\\ToDo\\src\\app\\store.ts":"6","D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\todolists-reducer.ts":"7","D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\TodolistsList.tsx":"8","D:\\INCUBATOR\\ToDo\\src\\api\\todolists-api.ts":"9","D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"10","D:\\INCUBATOR\\ToDo\\src\\components\\AddItemForm\\AddItemForm.tsx":"11","D:\\INCUBATOR\\ToDo\\src\\components\\EditableSpan\\EditableSpan.tsx":"12","D:\\INCUBATOR\\ToDo\\src\\app\\app-reducer.ts":"13","D:\\INCUBATOR\\ToDo\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"14","D:\\INCUBATOR\\ToDo\\src\\utils\\error-utils.ts":"15"},{"size":643,"mtime":1625524292779,"results":"16","hashOfConfig":"17"},{"size":1376,"mtime":1625768231777,"results":"18","hashOfConfig":"17"},{"size":1773,"mtime":1625524293258,"results":"19","hashOfConfig":"17"},{"size":6116,"mtime":1625827171567,"results":"20","hashOfConfig":"17"},{"size":425,"mtime":1625524292816,"results":"21","hashOfConfig":"17"},{"size":1098,"mtime":1625758786194,"results":"22","hashOfConfig":"17"},{"size":5131,"mtime":1625827257917,"results":"23","hashOfConfig":"17"},{"size":3797,"mtime":1625768163167,"results":"24","hashOfConfig":"17"},{"size":2582,"mtime":1625525082030,"results":"25","hashOfConfig":"17"},{"size":4014,"mtime":1625768712117,"results":"26","hashOfConfig":"17"},{"size":1673,"mtime":1625768740225,"results":"27","hashOfConfig":"17"},{"size":952,"mtime":1625524293077,"results":"28","hashOfConfig":"17"},{"size":903,"mtime":1625768416997,"results":"29","hashOfConfig":"17"},{"size":1015,"mtime":1625763137476,"results":"30","hashOfConfig":"17"},{"size":767,"mtime":1625825545562,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"y4v5z3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\INCUBATOR\\ToDo\\src\\index.tsx",[],["66","67"],"D:\\INCUBATOR\\ToDo\\src\\app\\App.tsx",[],"D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["68","69","70"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"D:\\INCUBATOR\\ToDo\\src\\reportWebVitals.ts",[],"D:\\INCUBATOR\\ToDo\\src\\app\\store.ts",[],"D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\TodolistsList.tsx",["71","72","73","74","75","76","77","78"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\n\r\nexport const TodolistsList: React.FC = () => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                id={tl.id}\r\n                                title={tl.title}\r\n                                entityStatus={tl.entityStatus}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                filter={tl.filter}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","D:\\INCUBATOR\\ToDo\\src\\api\\todolists-api.ts",[],"D:\\INCUBATOR\\ToDo\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["79","80","81","82","83","84"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    entityStatus: RequestStatusType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton disabled={props.entityStatus === 'loading'} onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm entityStatus={props.entityStatus} addItem={addTask}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","D:\\INCUBATOR\\ToDo\\src\\components\\AddItemForm\\AddItemForm.tsx",[],"D:\\INCUBATOR\\ToDo\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\INCUBATOR\\ToDo\\src\\app\\app-reducer.ts",[],"D:\\INCUBATOR\\ToDo\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\INCUBATOR\\ToDo\\src\\utils\\error-utils.ts",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":15,"column":97,"nodeType":"91","endLine":15,"endColumn":130,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"90","line":20,"column":8,"nodeType":"91","endLine":20,"endColumn":41,"suggestions":"93"},{"ruleId":"89","severity":1,"message":"90","line":24,"column":8,"nodeType":"91","endLine":24,"endColumn":41,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":27,"column":8,"nodeType":"91","endLine":27,"endColumn":10,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":32,"column":8,"nodeType":"91","endLine":32,"endColumn":10,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"97","line":37,"column":8,"nodeType":"91","endLine":37,"endColumn":10,"suggestions":"99"},{"ruleId":"89","severity":1,"message":"97","line":42,"column":8,"nodeType":"91","endLine":42,"endColumn":10,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"97","line":47,"column":8,"nodeType":"91","endLine":47,"endColumn":10,"suggestions":"101"},{"ruleId":"89","severity":1,"message":"97","line":52,"column":8,"nodeType":"91","endLine":52,"endColumn":10,"suggestions":"102"},{"ruleId":"89","severity":1,"message":"97","line":57,"column":8,"nodeType":"91","endLine":57,"endColumn":10,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"97","line":62,"column":8,"nodeType":"91","endLine":62,"endColumn":10,"suggestions":"104"},{"ruleId":"89","severity":1,"message":"105","line":36,"column":8,"nodeType":"91","endLine":36,"endColumn":10,"suggestions":"106"},{"ruleId":"89","severity":1,"message":"90","line":40,"column":8,"nodeType":"91","endLine":40,"endColumn":33,"suggestions":"107"},{"ruleId":"89","severity":1,"message":"90","line":47,"column":8,"nodeType":"91","endLine":47,"endColumn":45,"suggestions":"108"},{"ruleId":"89","severity":1,"message":"90","line":49,"column":86,"nodeType":"91","endLine":49,"endColumn":116,"suggestions":"109"},{"ruleId":"89","severity":1,"message":"90","line":50,"column":92,"nodeType":"91","endLine":50,"endColumn":122,"suggestions":"110"},{"ruleId":"89","severity":1,"message":"90","line":51,"column":98,"nodeType":"91","endLine":51,"endColumn":128,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["114"],["115"],["116"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["117"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["118"],["119"],["120"],["121"],["122"],["123"],["124"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["125"],["126"],["127"],["128"],["129"],["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},{"desc":"131","fix":"134"},{"desc":"135","fix":"136"},{"desc":"135","fix":"137"},{"desc":"135","fix":"138"},{"desc":"135","fix":"139"},{"desc":"135","fix":"140"},{"desc":"135","fix":"141"},{"desc":"135","fix":"142"},{"desc":"135","fix":"143"},{"desc":"144","fix":"145"},{"desc":"131","fix":"146"},{"desc":"131","fix":"147"},{"desc":"131","fix":"148"},{"desc":"131","fix":"149"},{"desc":"131","fix":"150"},"Update the dependencies array to be: [props]",{"range":"151","text":"152"},{"range":"153","text":"152"},{"range":"154","text":"152"},"Update the dependencies array to be: [dispatch]",{"range":"155","text":"156"},{"range":"157","text":"156"},{"range":"158","text":"156"},{"range":"159","text":"156"},{"range":"160","text":"156"},{"range":"161","text":"156"},{"range":"162","text":"156"},{"range":"163","text":"156"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"164","text":"165"},{"range":"166","text":"152"},{"range":"167","text":"152"},{"range":"168","text":"152"},{"range":"169","text":"152"},{"range":"170","text":"152"},[765,798],"[props]",[1071,1104],[1261,1294],[1049,1051],"[dispatch]",[1220,1222],[1391,1393],[1596,1598],[1809,1811],[2010,2012],[2157,2159],[2336,2338],[1475,1477],"[dispatch, props.id]",[1583,1608],[1821,1858],[1948,1978],[2072,2102],[2202,2232]]